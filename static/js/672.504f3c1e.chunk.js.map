{"version":3,"file":"static/js/672.504f3c1e.chunk.js","mappings":"4KACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCcjN,EAXmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACI,UAAC,KAAD,CAASC,GAAIJ,EAAb,eAAoB,gBAAKK,IAAKN,EAAMO,SAApC,KAAiDP,EAAMQ,WCEnE,EAPgB,SAACR,GACb,OACI,iBAAKG,UAAWC,EAAhB,cAA6BJ,EAAMS,QAAnC,Q,iDCiCFC,GAAcC,EAAAA,EAAAA,GAAiB,IAkB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACb,GACpB,OACI,kBAAMe,SAAUf,EAAMgB,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAYC,EAAAA,GACnBC,SAAU,CAAEC,EAAAA,EAASX,GACrBF,KAAM,iBAAkBc,YAAY,0BAGxC,0BACI,6CAQhB,EAjDgB,SAACtB,GAEb,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMN,GAAI0B,EAAE1B,GAAIK,OAAQqB,EAAErB,YACtFsB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAC9Cc,EAAMS,eAQ3B,OAAKhC,EAAMiC,QAGP,iBAAK9B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKqB,KAEL,gBAAKtB,UAAWC,EAAhB,SACKyB,KAEL,SAACjB,EAAD,CAAqBG,SAdT,SAACmB,GACjBlC,EAAMmC,YAAYD,EAAOF,uBAGH,SAAC,KAAD,CAAU3B,GAAG,Y,mBCD3C,GAAe+B,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACc,GACtB,MAAO,CACHH,YAAa,SAACH,GACVM,GAASC,EAAAA,EAAAA,GAAmBP,SAOpCQ,EAAAA,EAFJ,CAGGC","sources":["webpack://react-01/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__4aYpv\",\"dialogsItems\":\"Dialogs_dialogsItems__lPBP+\",\"dialog\":\"Dialogs_dialog__5sLjs\",\"active\":\"Dialogs_active__o7qrP\",\"messages\":\"Dialogs_messages__DPdTf\",\"message\":\"Dialogs_message__uEltY\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}> <img src={props.avatar} />  {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}> {props.message} </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field } from \"redux-form\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, reqired } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} avatar={d.avatar} />)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} />)\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addMessageElement = React.createRef();\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to='/login' />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field component={ Textarea }\r\n                validate={[ reqired, maxLength50 ]}\r\n                name={'newMessageBody'} placeholder=\"Enter your message\" />\r\n               \r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)\r\n"],"names":["props","path","id","className","s","to","src","avatar","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","reqired","placeholder","state","dialogsPage","dialogsElement","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}