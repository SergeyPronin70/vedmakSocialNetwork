{"version":3,"file":"static/js/34.6adc80dc.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-01/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-01/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__rLfn1\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}> {this.props.status || \"fusk\"} </span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n       \r\n    \r\n    let [editMode, setEditMode] =  useState(false);\r\n    let [status, setStatus] =  useState(props.status);\r\n    \r\nuseEffect( () => {\r\n    setStatus(props.status);\r\n}, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode} > {props.status || \"---\"}  </span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input  autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n   if (!profile) {\r\n      return <Preloader />\r\n    }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n     \r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} /> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__1XxYT\",\"posts\":\"MyPosts_posts__xQNWy\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__3wAQf\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cs4.pikabu.ru/post_img/big/2015/05/22/6/1432282614_1753581065.jpg' />\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, reqired } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.state\r\n  // }\r\n\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  let postsElements = [...props.posts]\r\n    .map(p => <Post message={p.message} likesCount={p.likesCount} />)\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts </h3>\r\n      <AddNewPostRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPost = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={'newPostText'} validate={[reqired, maxLength10]} placeholder={'Post message'} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPost)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n \r\n  return  (<>\r\n  <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}  />\r\n  <MyPostsContainer />\r\n  </>)\r\n  \r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport {useLocation, useMatch, useNavigate, useParams} from 'react-router-dom'; \r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n \r\n  componentDidMount() {\r\n    let userId = this.props?.match?.params?.userId;\r\n    console.log(userId);\r\n    \r\n     if (!userId) {\r\n       userId = this.props.authorizedUserId;\r\n       if (!userId) {\r\n         this.props.history.push('/login')\r\n       }\r\n     }\r\n     this.props.getUserProfile(userId);\r\n     this.props.getStatus(userId)\r\n\r\n  }\r\n  \r\n  render() {\r\n    return ( \r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nconst withRouter = (Component) => {\r\n   let RouterComponent = (props) => {\r\n     const match = useMatch('/profile/:userId')\r\n     return <Component {...props} match={match} />\r\n   }\r\n   return RouterComponent;\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n) (ProfileContainer)\r\n"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","className","s","src","photos","large","Preloader","message","likesCount","MyPosts","postsElements","posts","map","p","AddNewPostRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","reqired","placeholder","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","console","log","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","Component","useMatch","withAuthRedirect"],"sourceRoot":""}