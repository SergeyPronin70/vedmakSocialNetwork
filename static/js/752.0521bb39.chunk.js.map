{"version":3,"file":"static/js/752.0521bb39.chunk.js","mappings":"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","sources":["webpack://react-01/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-01/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-01/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__rLfn1\",\"mainPhoto\":\"ProfileInfo_mainPhoto__dlEIJ\",\"contact\":\"ProfileInfo_contact__WsOPj\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n       \r\n    \r\n    let [editMode, setEditMode] =  useState(false);\r\n    let [status, setStatus] =  useState(props.status);\r\n    \r\nuseEffect( () => {\r\n    setStatus(props.status);\r\n}, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <b>Status:</b> <span onDoubleClick={activateEditMode} > {props.status || \"---\"}  </span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input  autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { CreateField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={ handleSubmit }>\r\n      <div><button>Save</button></div>\r\n      { error && <div className={ style.formSummaryError }>\r\n                {error}\r\n            </div>}\r\n    <div>\r\n      <b>Full name</b>:\r\n      { CreateField(\"Full name\", \"fullName\", Input, [] ) }\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: \r\n      { CreateField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"} ) }\r\n    </div>\r\n    \r\n      <div>\r\n        <b>My professional skills</b>: \r\n        { CreateField(\"My professional skills\", \"lookingForAJobDescription\", Textarea, [] ) }\r\n      </div>\r\n    <div>\r\n      <b>About me</b>:\r\n      { CreateField(\"About me\", \"aboutMe\", Textarea, [] ) }\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={s.contact}>\r\n          <b>{key}: { CreateField(key, \"contacts.\" + key, Input, [] ) }</b>\r\n        </div>\r\n      })}\r\n    </div>\r\n    </form>\r\n  }\r\n\r\n  const ProfileDataFormRedux = reduxForm({\r\n    //уникальное имя для формы\r\n    form: 'edit-profile'\r\n})(ProfileDataForm)\r\n\r\n  export default ProfileDataFormRedux;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from './../../../assets/images/user.jpg'\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData)\r\n    .then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    )\r\n    \r\n}\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode \r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> \r\n          : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner} />}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div>\r\n{isOwner && <div><button onClick={ goToEditMode }>edit</button></div>}\r\n    <div>\r\n      <b>Full name:</b> {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n      </div>}\r\n    <div>\r\n      <b>About me:</b> {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b> {contactTitle} </b> : {contactValue} </div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__1XxYT\",\"posts\":\"MyPosts_posts__xQNWy\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__3wAQf\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cs4.pikabu.ru/post_img/big/2015/05/22/6/1432282614_1753581065.jpg' />\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, reqired } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.state\r\n  // }\r\n\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  let postsElements = [...props.posts]\r\n    .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts </h3>\r\n      <AddNewPostRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPost = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={'newPostText'} validate={[reqired, maxLength10]} placeholder={'Post message'} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPost)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n \r\n  return  (<>\r\n  <ProfileInfo \r\n  savePhoto={props.savePhoto} \r\n  profile={props.profile} \r\n  isOwner={props.isOwner} \r\n  status={props.status} \r\n  updateStatus={props.updateStatus}\r\n  saveProfile={props.saveProfile}  />\r\n  <MyPostsContainer />\r\n  </>)\r\n  \r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport {useMatch} from 'react-router-dom'; \r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n \r\nrefreshProfile () {\r\n  let userId = this.props?.match?.params?.userId;\r\n  console.log(userId);\r\n  \r\n   if (!userId) {\r\n     userId = this.props.authorizedUserId;\r\n     if (!userId) {\r\n       this.props.history.push('/login')\r\n     }\r\n   }\r\n   this.props.getUserProfile(userId);\r\n   this.props.getStatus(userId)\r\n}\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props?.match?.params?.userId != prevProps.match?.params?.userId) {\r\n    this.refreshProfile();\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return ( \r\n        <Profile {...this.props} \r\n        isOwner={!this.props?.match?.params?.userId}\r\n        profile={this.props.profile} \r\n        status={this.props.status} \r\n        updateStatus={this.props.updateStatus} \r\n        savePhoto={this.props.savePhoto} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nconst withRouter = (Component) => {\r\n   let RouterComponent = (props) => {\r\n     const match = useMatch('/profile/:userId')\r\n     return <Component {...props} match={match} />\r\n   }\r\n   return RouterComponent;\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n) (ProfileContainer)\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","CreateField","Input","type","Textarea","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","message","likesCount","MyPosts","React","postsElements","posts","p","id","AddNewPostRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","component","name","validate","reqired","placeholder","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","console","log","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","Component","useMatch","withAuthRedirect"],"sourceRoot":""}