{"version":3,"file":"static/js/377.ff0bf663.chunk.js","mappings":"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","sources":["webpack://react-01/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-01/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-01/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/common/MySelect.jsx","webpack://react-01/./src/components/Profile/MyPosts/MyModal.module.css?e721","components/Profile/MyPosts/MyModal.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__rLfn1\",\"mainPhoto\":\"ProfileInfo_mainPhoto__dlEIJ\",\"contact\":\"ProfileInfo_contact__WsOPj\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n       \r\n    \r\n    let [editMode, setEditMode] =  useState(false);\r\n    let [status, setStatus] =  useState(props.status);\r\n    \r\nuseEffect( () => {\r\n    setStatus(props.status);\r\n}, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <b>Status:</b> <span onDoubleClick={activateEditMode} > {props.status || \"---\"}  </span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input  autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { CreateField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={ handleSubmit }>\r\n      <div><button>Save</button></div>\r\n      { error && <div className={ style.formSummaryError }>\r\n                {error}\r\n            </div>}\r\n    <div>\r\n      <b>Full name</b>:\r\n      { CreateField(\"Full name\", \"fullName\", Input, [] ) }\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: \r\n      { CreateField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"} ) }\r\n    </div>\r\n    \r\n      <div>\r\n        <b>My professional skills</b>: \r\n        { CreateField(\"My professional skills\", \"lookingForAJobDescription\", Textarea, [] ) }\r\n      </div>\r\n    <div>\r\n      <b>About me</b>:\r\n      { CreateField(\"About me\", \"aboutMe\", Textarea, [] ) }\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={s.contact}>\r\n          <b>{key}: { CreateField(key, \"contacts.\" + key, Input, [] ) }</b>\r\n        </div>\r\n      })}\r\n    </div>\r\n    </form>\r\n  }\r\n\r\n  const ProfileDataFormRedux = reduxForm({\r\n    //уникальное имя для формы\r\n    form: 'edit-profile'\r\n})(ProfileDataForm)\r\n\r\n  export default ProfileDataFormRedux;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from './../../../assets/images/user.jpg'\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData)\r\n    .then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    )\r\n    \r\n}\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode \r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> \r\n          : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner} />}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div>\r\n{isOwner && <div><button onClick={ goToEditMode }>edit</button></div>}\r\n    <div>\r\n      <b>Full name:</b> {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n      </div>}\r\n    <div>\r\n      <b>About me:</b> {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b> {contactTitle} </b> : {contactValue} </div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__1XxYT\",\"posts\":\"MyPosts_posts__xQNWy\",\"photo\":\"MyPosts_photo__oUnKS\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__3wAQf\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n \r\n\r\n  return (\r\n    <div className={s.item}>\r\n       <img src= {props.profile.profile?.photos?.small} />\r\n     \r\n      <h2>{props.message}</h2>\r\n      <div>\r\n        <span>Likes</span> {props.likesCount}\r\n        <button onClick={ () => {props.incrementLikesCount(props.id)}}>Like</button>\r\n        <button onClick={() => {props.decrementLikesCount(props.id)}}>Dislike</button>\r\n        <button onClick={ () => {props.deletePost(props.id)} }>Delete</button>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\n\r\nconst MySelect = ({ options, defaultValue, value, onChange }) => {\r\n   \r\n    return (\r\n        <select\r\n        value={value}\r\n        onChange={ event => onChange(event.target.value) }\r\n        >\r\n            <option disabled value=''>{defaultValue}</option>\r\n                        \r\n            {options.map(option => {\r\n                return <option key={option.value} value={option.value}>\r\n                    {option.name}\r\n                </option>\r\n            })}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default MySelect;","// extracted by mini-css-extract-plugin\nexport default {\"myModal\":\"MyModal_myModal__rIB+o\",\"myModalContent\":\"MyModal_myModalContent__tseBa\",\"active\":\"MyModal_active__nINpm\"};","import React from \"react\";\r\nimport styles from './MyModal.module.css'\r\n\r\nconst MyModal = ({ children, visible, setVisible }) => {\r\n\r\n    const rootClasses = [styles.myModal]\r\n    if (visible) {\r\n        rootClasses.push(styles.active)\r\n    }\r\n\r\n    return (\r\n        <div className={rootClasses.join(' ')} onClick={(() => setVisible(false))} >\r\n            <div className={styles.myModalContent} onClick={(e) => e.stopPropagation() }>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyModal;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, reqired } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport MySelect from '../../common/MySelect';\r\nimport { useState } from 'react';\r\nimport { useMemo } from 'react';\r\nimport MyModal from './MyModal';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  const [selectedSort, setSelectedSort] = useState('');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [modal, setModal] = useState(false);\r\n\r\n  // const sortedPosts = useMemo( (sort) => {\r\n  //   if (selectedSort) {\r\n  //   return props.sortPostsActionCreator(sort);\r\n  //   } \r\n  //   console.log(props)\r\n  //   return props.posts;\r\n\r\n  // }, [selectedSort, props.posts] )\r\n\r\n  const sortPosts = (sort) => {\r\n    setSelectedSort(sort);\r\n    props.sortPostsActionCreator(sort)\r\n  }\r\n\r\n  // const searchPost = (search) => { заготовка для использования в редьюсере\r\n  //   setSearchQuery(search);\r\n  //   props.searchPost(search)\r\n  // }\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPostActionCreator(values.newPostText);\r\n    setModal(false);\r\n  }\r\n\r\n  let sortedAndSearchedPosts = useMemo(() => {\r\n    return [...props.posts].filter(post => post.message.toLowerCase().includes(searchQuery.toLowerCase()))\r\n  }, [searchQuery, selectedSort, props.posts])\r\n\r\n  let postsElements = sortedAndSearchedPosts\r\n    .map(p => <Post\r\n      key={p.id}\r\n      id={p.id}\r\n      message={p.message}\r\n      likesCount={p.likesCount}\r\n      incrementLikesCount={props.incrementLikesCount}\r\n      decrementLikesCount={props.decrementLikesCount}\r\n      profile={props.profile}\r\n      deletePost={props.deletePost} />)\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts </h3>\r\n\r\n      <input value={searchQuery} onChange={e => setSearchQuery(e.target.value)} placeholder='Search...' />\r\n      <div>\r\n        <button onClick={() => setModal(true)}> Create new post </button>\r\n        <MyModal visible={modal} setVisible={setModal} >\r\n          <AddNewPostRedux onSubmit={onAddPost} newPostText={props.newPostText} />\r\n        </MyModal>\r\n        <MySelect\r\n          value={selectedSort}\r\n          onChange={sortPosts}\r\n          defaultValue='Sorting'\r\n          options={[\r\n            { value: 'message', name: 'By message' },\r\n            { value: 'likesCount', name: 'By likes count' }]}\r\n        />\r\n      </div>\r\n\r\n      {sortedAndSearchedPosts.length\r\n        ?\r\n        <div className={s.posts}>\r\n          {postsElements}\r\n        </div>\r\n        : <b>Posts not found...</b>}\r\n    </div>\r\n  )\r\n})\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\n\r\nconst AddNewPost = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={'newPostText'} validate={[reqired, maxLength100]} placeholder={'Post message'} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddNewPostRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPost)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, deletePost, incrementLikesCount, decrementLikesCount, sortPostsActionCreator, searchPost } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n    profile: state.profilePage\r\n  }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addPost: (newPostText) => {\r\n//       dispatch(addPostActionCreator(newPostText));\r\n//     },\r\n//     deletePost: (postId) => {\r\n//       dispatch(deletePost(postId))\r\n//     }\r\n//     // incrementLikesCount: () => {dispatch(incrementLikesCount())},\r\n//     // decrementLikesCount: () => {dispatch(decrementLikesCount())}\r\n//   }\r\n// }\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, \r\n  {incrementLikesCount, decrementLikesCount, deletePost, addPostActionCreator, sortPostsActionCreator, searchPost }\r\n  //mapDispatchToProps\r\n  )  (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n  return (<>\r\n    <ProfileInfo\r\n      savePhoto={props.savePhoto}\r\n      profile={props.profile}\r\n      isOwner={props.isOwner}\r\n      status={props.status}\r\n      updateStatus={props.updateStatus}\r\n      saveProfile={props.saveProfile} />\r\n    <MyPostsContainer profile={props.profile} />\r\n  </>)\r\n\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../redux/profile-reducer';\r\nimport {useMatch} from 'react-router-dom'; \r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n \r\nrefreshProfile () {\r\n  let userId = this.props?.match?.params?.userId;\r\n    \r\n   if (!userId) {\r\n     userId = this.props.authorizedUserId;\r\n     if (!userId) {\r\n       this.props.history.push('/login')\r\n     }\r\n   }\r\n   this.props.getUserProfile(userId);\r\n   this.props.getStatus(userId)\r\n}\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props?.match?.params?.userId != prevProps.match?.params?.userId) {\r\n    this.refreshProfile();\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return ( \r\n        <Profile {...this.props} \r\n        isOwner={!this.props?.match?.params?.userId}\r\n        profile={this.props.profile} \r\n        status={this.props.status} \r\n        updateStatus={this.props.updateStatus} \r\n        savePhoto={this.props.savePhoto} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nconst withRouter = (Component) => {\r\n   let RouterComponent = (props) => {\r\n     const match = useMatch('/profile/:userId')\r\n     return <Component {...props} match={match} />\r\n   }\r\n   return RouterComponent;\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, \r\n    { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n) (ProfileContainer)\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","CreateField","Input","type","Textarea","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","small","message","likesCount","incrementLikesCount","id","decrementLikesCount","deletePost","options","defaultValue","event","disabled","option","name","children","visible","setVisible","rootClasses","styles","push","join","stopPropagation","MyPosts","React","selectedSort","setSelectedSort","searchQuery","setSearchQuery","modal","setModal","sortedAndSearchedPosts","useMemo","posts","filter","post","toLowerCase","includes","postsElements","p","placeholder","AddNewPostRedux","values","addPostActionCreator","newPostText","sort","sortPostsActionCreator","maxLength100","maxLengthCreator","Field","component","validate","reqired","connect","state","profilePage","searchPost","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","Component","useMatch","withAuthRedirect"],"sourceRoot":""}